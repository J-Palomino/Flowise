name: Branch Docker Image CI

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - '**.md'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      
      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        # Make this step optional so the workflow doesn't fail if secrets aren't set
        continue-on-error: true
        id: docker_login
      
      # Build for amd64 only
      - name: Build and push
        id: build
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: ./docker/Dockerfile.source
          build-args: |
            NODE_VERSION=20
          # Only push if Docker Hub login was successful
          push: ${{ steps.docker_login.outcome == 'success' }}
          tags: |
            flowiseai/flowise:${{ env.BRANCH_NAME }}
            flowiseai/flowise:${{ env.BRANCH_NAME }}-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      # Always build the image locally to verify it works if the main build fails
      - name: Build image locally
        if: failure() && steps.build.outcome != 'success'
        run: |
          echo "Docker build failed. Building image locally with verbose output to debug..."
          docker build --progress=plain -t flowiseai/flowise:local -f ./docker/Dockerfile.source .
      
      # Save the build logs for debugging
      - name: Save build logs
        if: always()
        run: |
          echo "Docker build status: ${{ steps.build.outcome }}"
          
          # Save Docker build logs if available
          docker images
          docker system info